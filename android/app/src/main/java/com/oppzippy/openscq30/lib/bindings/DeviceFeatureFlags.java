// Automatically generated by flapigen
package com.oppzippy.openscq30.lib.bindings;
import androidx.annotation.NonNull;

public final class DeviceFeatureFlags {
    @Override
    public boolean equals(Object obj) {
        if (obj instanceof DeviceFeatureFlags)
            return ((DeviceFeatureFlags)obj).rustEq(this);
        return false;
    }


    private final boolean rustEq(@NonNull DeviceFeatureFlags other) {
        long a0 = other.mNativeObj;
        boolean ret = do_rustEq(mNativeObj, a0);

        JNIReachabilityFence.reachabilityFence1(other);

        return ret;
    }
    private static native boolean do_rustEq(long self, long other);

    public DeviceFeatureFlags(int bits) {
        mNativeObj = init(bits);
    }
    private static native long init(int bits);

    public final @NonNull DeviceFeatureFlags or(@NonNull DeviceFeatureFlags other) {
        long a0 = other.mNativeObj;
        long ret = do_or(mNativeObj, a0);
        DeviceFeatureFlags convRet = new DeviceFeatureFlags(InternalPointerMarker.RAW_PTR, ret);

        JNIReachabilityFence.reachabilityFence1(other);

        return convRet;
    }
    private static native long do_or(long self, long other);

    public final boolean contains(@NonNull DeviceFeatureFlags other) {
        long a0 = other.mNativeObj;
        boolean ret = do_contains(mNativeObj, a0);

        JNIReachabilityFence.reachabilityFence1(other);

        return ret;
    }
    private static native boolean do_contains(long self, long other);

    public final int bits() {
        int ret = do_bits(mNativeObj);

        return ret;
    }
    private static native int do_bits(long self);

    public static @NonNull DeviceFeatureFlags soundModes() {
        long ret = do_soundModes();
        DeviceFeatureFlags convRet = new DeviceFeatureFlags(InternalPointerMarker.RAW_PTR, ret);

        return convRet;
    }
    private static native long do_soundModes();

    public static @NonNull DeviceFeatureFlags noiseCancelingMode() {
        long ret = do_noiseCancelingMode();
        DeviceFeatureFlags convRet = new DeviceFeatureFlags(InternalPointerMarker.RAW_PTR, ret);

        return convRet;
    }
    private static native long do_noiseCancelingMode();

    public static @NonNull DeviceFeatureFlags customNoiseCanceling() {
        long ret = do_customNoiseCanceling();
        DeviceFeatureFlags convRet = new DeviceFeatureFlags(InternalPointerMarker.RAW_PTR, ret);

        return convRet;
    }
    private static native long do_customNoiseCanceling();

    public static @NonNull DeviceFeatureFlags transparencyModes() {
        long ret = do_transparencyModes();
        DeviceFeatureFlags convRet = new DeviceFeatureFlags(InternalPointerMarker.RAW_PTR, ret);

        return convRet;
    }
    private static native long do_transparencyModes();

    public static @NonNull DeviceFeatureFlags hearId() {
        long ret = do_hearId();
        DeviceFeatureFlags convRet = new DeviceFeatureFlags(InternalPointerMarker.RAW_PTR, ret);

        return convRet;
    }
    private static native long do_hearId();

    public static @NonNull DeviceFeatureFlags equalizer() {
        long ret = do_equalizer();
        DeviceFeatureFlags convRet = new DeviceFeatureFlags(InternalPointerMarker.RAW_PTR, ret);

        return convRet;
    }
    private static native long do_equalizer();

    public static @NonNull DeviceFeatureFlags customButtonModel() {
        long ret = do_customButtonModel();
        DeviceFeatureFlags convRet = new DeviceFeatureFlags(InternalPointerMarker.RAW_PTR, ret);

        return convRet;
    }
    private static native long do_customButtonModel();

    public static @NonNull DeviceFeatureFlags wearDetection() {
        long ret = do_wearDetection();
        DeviceFeatureFlags convRet = new DeviceFeatureFlags(InternalPointerMarker.RAW_PTR, ret);

        return convRet;
    }
    private static native long do_wearDetection();

    public static @NonNull DeviceFeatureFlags touchTone() {
        long ret = do_touchTone();
        DeviceFeatureFlags convRet = new DeviceFeatureFlags(InternalPointerMarker.RAW_PTR, ret);

        return convRet;
    }
    private static native long do_touchTone();

    public static @NonNull DeviceFeatureFlags autoPowerOff() {
        long ret = do_autoPowerOff();
        DeviceFeatureFlags convRet = new DeviceFeatureFlags(InternalPointerMarker.RAW_PTR, ret);

        return convRet;
    }
    private static native long do_autoPowerOff();

    public static @NonNull DeviceFeatureFlags twoChannelEqualizer() {
        long ret = do_twoChannelEqualizer();
        DeviceFeatureFlags convRet = new DeviceFeatureFlags(InternalPointerMarker.RAW_PTR, ret);

        return convRet;
    }
    private static native long do_twoChannelEqualizer();

    public static @NonNull DeviceFeatureFlags dynamicRangeCompression() {
        long ret = do_dynamicRangeCompression();
        DeviceFeatureFlags convRet = new DeviceFeatureFlags(InternalPointerMarker.RAW_PTR, ret);

        return convRet;
    }
    private static native long do_dynamicRangeCompression();

    public static @NonNull DeviceFeatureFlags all() {
        long ret = do_all();
        DeviceFeatureFlags convRet = new DeviceFeatureFlags(InternalPointerMarker.RAW_PTR, ret);

        return convRet;
    }
    private static native long do_all();

    public static @NonNull DeviceFeatureFlags empty() {
        long ret = do_empty();
        DeviceFeatureFlags convRet = new DeviceFeatureFlags(InternalPointerMarker.RAW_PTR, ret);

        return convRet;
    }
    private static native long do_empty();

    public synchronized void delete() {
        if (mNativeObj != 0) {
            do_delete(mNativeObj);
            mNativeObj = 0;
       }
    }
    @Override
    protected void finalize() throws Throwable {
        try {
            delete();
        }
        finally {
             super.finalize();
        }
    }
    private static native void do_delete(long me);
    /*package*/ DeviceFeatureFlags(InternalPointerMarker marker, long ptr) {
        assert marker == InternalPointerMarker.RAW_PTR;
        this.mNativeObj = ptr;
    }
    /*package*/ long mNativeObj;
}