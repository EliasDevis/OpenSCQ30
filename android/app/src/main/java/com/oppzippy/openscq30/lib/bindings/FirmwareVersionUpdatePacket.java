// Automatically generated by flapigen
package com.oppzippy.openscq30.lib.bindings;
import androidx.annotation.NonNull;

public final class FirmwareVersionUpdatePacket {
    @Override
    public boolean equals(Object obj) {
        if (obj instanceof FirmwareVersionUpdatePacket)
            return ((FirmwareVersionUpdatePacket)obj).rustEq(this);
        return false;
    }


    private final boolean rustEq(@NonNull FirmwareVersionUpdatePacket other) {
        long a0 = other.mNativeObj;
        boolean ret = do_rustEq(mNativeObj, a0);

        JNIReachabilityFence.reachabilityFence1(other);

        return ret;
    }
    private static native boolean do_rustEq(long self, long other);

    public FirmwareVersionUpdatePacket() throws Exception {
        mNativeObj = init();
    }
    private static native long init() throws Exception;

    public final @NonNull FirmwareVersion leftFirmwareVersion() {
        long ret = do_leftFirmwareVersion(mNativeObj);
        FirmwareVersion convRet = new FirmwareVersion(InternalPointerMarker.RAW_PTR, ret);

        return convRet;
    }
    private static native long do_leftFirmwareVersion(long self);

    public final @NonNull FirmwareVersion rightFirmwareVersion() {
        long ret = do_rightFirmwareVersion(mNativeObj);
        FirmwareVersion convRet = new FirmwareVersion(InternalPointerMarker.RAW_PTR, ret);

        return convRet;
    }
    private static native long do_rightFirmwareVersion(long self);

    public final @NonNull String serialNumber() {
        String ret = do_serialNumber(mNativeObj);

        return ret;
    }
    private static native @NonNull String do_serialNumber(long self);

    public synchronized void delete() {
        if (mNativeObj != 0) {
            do_delete(mNativeObj);
            mNativeObj = 0;
       }
    }
    @Override
    protected void finalize() throws Throwable {
        try {
            delete();
        }
        finally {
             super.finalize();
        }
    }
    private static native void do_delete(long me);
    /*package*/ FirmwareVersionUpdatePacket(InternalPointerMarker marker, long ptr) {
        assert marker == InternalPointerMarker.RAW_PTR;
        this.mNativeObj = ptr;
    }
    /*package*/ long mNativeObj;
}