// Automatically generated by flapigen
package com.oppzippy.openscq30.lib;
import androidx.annotation.NonNull;

public final class SoundcoreDeviceState {

    public SoundcoreDeviceState(@NonNull StateUpdatePacket packet) {
        long a0 = packet.mNativeObj;
        mNativeObj = init(a0);
        JNIReachabilityFence.reachabilityFence1(packet);
    }
    private static native long init(long packet);

    public final AmbientSoundMode ambientSoundMode() {
        int ret = do_ambientSoundMode(mNativeObj);
        AmbientSoundMode convRet = AmbientSoundMode.fromInt(ret);

        return convRet;
    }
    private static native int do_ambientSoundMode(long self);

    public final NoiseCancelingMode noiseCancelingMode() {
        int ret = do_noiseCancelingMode(mNativeObj);
        NoiseCancelingMode convRet = NoiseCancelingMode.fromInt(ret);

        return convRet;
    }
    private static native int do_noiseCancelingMode(long self);

    public final @NonNull EqualizerConfiguration equalizerConfiguration() {
        long ret = do_equalizerConfiguration(mNativeObj);
        EqualizerConfiguration convRet = new EqualizerConfiguration(InternalPointerMarker.RAW_PTR, ret);

        return convRet;
    }
    private static native long do_equalizerConfiguration(long self);

    public final @NonNull SoundcoreDeviceState withAmbientSoundMode(@NonNull AmbientSoundMode ambient_sound_mode) {
        int a0 = ambient_sound_mode.getValue();
        long ret = do_withAmbientSoundMode(mNativeObj, a0);
        SoundcoreDeviceState convRet = new SoundcoreDeviceState(InternalPointerMarker.RAW_PTR, ret);

        JNIReachabilityFence.reachabilityFence1(ambient_sound_mode);

        return convRet;
    }
    private static native long do_withAmbientSoundMode(long self, int ambient_sound_mode);

    public final @NonNull SoundcoreDeviceState withNoiseCancelingMode(@NonNull NoiseCancelingMode noise_canceling_mode) {
        int a0 = noise_canceling_mode.getValue();
        long ret = do_withNoiseCancelingMode(mNativeObj, a0);
        SoundcoreDeviceState convRet = new SoundcoreDeviceState(InternalPointerMarker.RAW_PTR, ret);

        JNIReachabilityFence.reachabilityFence1(noise_canceling_mode);

        return convRet;
    }
    private static native long do_withNoiseCancelingMode(long self, int noise_canceling_mode);

    public final @NonNull SoundcoreDeviceState withEqualizerConfiguration(@NonNull EqualizerConfiguration equalizer_configuration) {
        long a0 = equalizer_configuration.mNativeObj;
        equalizer_configuration.mNativeObj = 0;

        long ret = do_withEqualizerConfiguration(mNativeObj, a0);
        SoundcoreDeviceState convRet = new SoundcoreDeviceState(InternalPointerMarker.RAW_PTR, ret);

        JNIReachabilityFence.reachabilityFence1(equalizer_configuration);

        return convRet;
    }
    private static native long do_withEqualizerConfiguration(long self, long equalizer_configuration);

    public synchronized void delete() {
        if (mNativeObj != 0) {
            do_delete(mNativeObj);
            mNativeObj = 0;
       }
    }
    @Override
    protected void finalize() throws Throwable {
        try {
            delete();
        }
        finally {
             super.finalize();
        }
    }
    private static native void do_delete(long me);
    /*package*/ SoundcoreDeviceState(InternalPointerMarker marker, long ptr) {
        assert marker == InternalPointerMarker.RAW_PTR;
        this.mNativeObj = ptr;
    }
    /*package*/ long mNativeObj;
}